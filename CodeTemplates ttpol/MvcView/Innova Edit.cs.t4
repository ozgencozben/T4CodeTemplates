<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model <#= ViewDataTypeName #>
<# 
	string saltModelName =  ViewDataTypeName.Split('.').Last().Replace("Simple","").Replace("View","").Replace("Filter","");
	IList<string> excludedFields = new List<string>() {"nversion", "Active", "_tag", "IslemYapan", "IslemTarihi", "Kaydeden", "KaydedilmeTarihi", "GoruntulenmeDurumu", "KilitleyenKisi" };
#>

<div class="modal fade" id="mdlEdit<#= saltModelName #>" tabindex="-1" role="dialog" aria-labelledby="mdlEdit<#= saltModelName #>Label" aria-hidden="true" style="z-index: 2000;">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Kapat</span></button>
                <h4 class="modal-title" id="mdlEdit<#= saltModelName #>Label"><#= saltModelName #> Güncelle</h4>
            </div>

            @using (Html.BeginForm("Save", "<#= saltModelName #>", FormMethod.Post, new { @id = "frmEdit<#= saltModelName #>" }))
            {
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)
                    <div class="row">
						<#
							foreach (PropertyMetadata property in ModelMetadata.Properties) {
							if(!excludedFields.Contains(property.PropertyName)){
						 #>
						   <div class="form-group">
								<label>@Html.LabelFor(model => model.<#= property.PropertyName #>, htmlAttributes: new { @class = "" })</label>
								@Html.EditorFor(model => model.<#= property.PropertyName #>, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayPlaceHolderFor(n => n.<#= property.PropertyName #>) } })
								@Html.ValidationMessageFor(model => model.<#= property.PropertyName #>, "", new { @class = "text-danger" })
							</div>
						 <#
							}
						 }
						 #>
                        <div class="form-group">
                            @Html.HiddenFor(model => model.nversion)
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-10">
                                <div class="checkbox checkbox-switch">
                                    <input name="Active" type="checkbox" class="switch" data-on-text="Aktif" data-off-text="Pasif" data-on-color="success" data-off-color="default" @(Model.Active ? "value=true checked=checked" : " value=false")>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Kaydet <i class="icon-arrow-right14 position-right"></i></button>
                </div>
            }
        </div>
        <!-- /.modal-content -->
    </div>
</div>
